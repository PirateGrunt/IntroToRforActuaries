<<SetParentPart2, echo=FALSE>>=
set_parent('../Parent/RPM-Parent.Rnw')
@

\begin{frame}{Part 2a}
  \begin{itemize}
    \item Basic visualization
    \item Deeper into data frames
  \end{itemize}
\end{frame}

\begin{frame}[fragile]{The simple script}
<<eval=TRUE>>=
N = 100
B0 = 5
B1 = 1.5

set.seed(1234)

e = rnorm(N, mean = 0, sd = 1)
X1 = rep(seq(1,10),10)

Y = B0 + B1 * X1 + e

df = data.frame(Y, X1, e)
myFit = lm(Y ~ X1, data=df)

# Values predicted from the model
yHat = predict(myFit)
@
\end{frame}

\begin{frame}{Plots}
  \begin{itemize}
    \item scatter
    \item line
    \item hist
    \item density
    \item boxplot
    \item barplot
    \item dotplot
  \end{itemize}
  plot is the most basic graphics command. There are several dozen options that you can set. Spend a lot of time reading the documentation and experimenting.

\end{frame}

\begin{frame}[fragile]{A basic scatter plot}
<<size='tiny', fig.height=5>>=
plot(X1, Y, pch=19)
@
\end{frame}

\begin{frame}[fragile]{Add lines}
The functions 'lines' and 'points' will add (wait for it) lines and points to a pre-existing plot.
<<size='tiny', fig.height=5, echo=FALSE>>=
plot(X1, Y, pch=19)
lines(X1, yHat)
@
<<size='tiny', eval=FALSE>>=
lines(X1, yHat)
@
\end{frame}

\begin{frame}
Can everyone generate a scatter plot?
\end{frame}

\begin{frame}[fragile]{Histogram}
<<size='tiny', fig.height=5>>=
hist(e)
@
\end{frame}

\begin{frame}[fragile]
<<size='tiny', fig.height=5>>=
set.seed(1234)
e2 = rnorm(1000, mean=0, sd=1)
hist(e2)
@
\end{frame}

\begin{frame}[fragile]{Density plot}
<<size='tiny', fig.height=5>>=
plot(density(e2))
@
\end{frame}

\begin{frame}[fragile]{Boxplot}
<<size='tiny', fig.height=5>>=
boxplot(e2, pch=19)
@
\end{frame}

\begin{frame}[fragile]{Plotting a formula}
<<size='tiny', fig.height=5>>=
plot(Y ~ X1, pch=19)
@
\end{frame}

\begin{frame}[fragile]{Emphasizing outliers}
<<size='tiny', fig.height=5>>=
colors = ifelse(abs(e) > 1.0, "red", "black")
plot(Y ~ X1, pch=19, col=colors)
@
\end{frame}

\begin{frame}[fragile]{Other ways to emphasize outliers}
<<size='tiny', fig.height=5>>=
plot(Y ~ X1, pch=19)
lines(X1, yHat, lwd=2)
lines(X1, yHat+1, lty="dotted", lwd=0.5)
lines(X1, yHat-1, lty="dotted", lwd=0.5)
@
\end{frame}

\begin{frame}
All of these plots capture univariate random variables rather well. We'll show how to plot grouped data after we create a dataframe. After lunch, we'll talk a bit more about multivariate visualization.
\end{frame}

\begin{frame}
Data frames
\begin{itemize}
  \item Creating
  \item Referencing
  \item Ordering
  \item Adding new columns
  \item Subsetting
  \item Summarizing
  \item Merging
\end{itemize}
\end{frame}

\begin{frame}[fragile]{Creating a data frame}
<<size='tiny'>>=
set.seed(1234)
State = rep(c("TX", "NY", "CA"), 10)
EarnedPremium = rlnorm(length(State), meanlog = log(50000), sdlog=1)
EarnedPremium = round(EarnedPremium, -3)
Losses = EarnedPremium * runif(length(EarnedPremium), min=0.4, max = 0.9)
@
<<eval=FALSE, size='tiny'>>=
plot(density(EarnedPremium))
summary(EarnedPremium)
@
<<size='tiny'>>=
df = data.frame(State, EarnedPremium, Losses)
@
\end{frame}

\begin{frame}[fragile]{Basic properties of a data frame}
<<size='tiny'>>=
summary(df)
@
\end{frame}

\begin{frame}[fragile]{More basic properties of a data frame}
<<size='tiny'>>=
names(df)
colnames(df)
length(df)
dim(df)
nrow(df)
ncol(df)
@
\end{frame}

\begin{frame}[fragile]{And still more basic properties}
<<size='tiny'>>=
head(df)
head(df, 2)
tail(df)
@
\end{frame}

\begin{frame}[fragile]{Enough with the basic properties already}
<<size='tiny', fig.height=5>>=
plot(df, pch=19)
@
\end{frame}

\begin{frame}[fragile]{Referencing}
<<size='tiny', eval=FALSE>>=
df[2,3]
df[2]
df[2,]
df[2, -1]
@
\end{frame}

\begin{frame}[fragile]{More referencing}
<<size='tiny', eval=FALSE>>=
# The $ operator may be used to select a single column
df$EarnedPremium
# Columns of a data frame may be treated as vectors
df$EarnedPremium[3]
df[2:4, 1:2]
df[, "EarnedPremium"]
df[, c("EarnedPremium", "State")]
@
\end{frame}

\begin{frame}[fragile]{Ordering}
<<size='tiny'>>=
order(df$EarnedPremium)
df = df[order(df$EarnedPremium), ]
@
\end{frame}

\begin{frame}[fragile]{Altering and adding columns}
<<size='tiny'>>=
df$PolicyNumber = 1:(nrow(df))

df$LossRatio = df$EarnedPremium / df$Losses
df$LossRatio = 1 / df$LossRatio
@
\end{frame}

\begin{frame}[fragile]{Eliminating columns}
<<>>=
df$LossRatio = NULL
df = df[, 1:4]
@
\end{frame}

\begin{frame}[fragile]{rbind, cbind}
<<>>=
rbind(A, B)
cbind(A, C)
@
\end{frame}

\begin{frame}[fragile]{Merging}
<<size='tiny'>>=
dfRateChange = data.frame(State =c("TX", "CA", "NY"), RateChange = c(.05, -.1, .2))
df = merge(df, dfRateChange)
@
Merging is VLOOKUP on steroids. Basically equivalent to a JOIN in SQL.
\end{frame}

\begin{frame}[fragile]{Altering column names}
<<size='tiny'>>=
df$LossRation = with(df, Losses / EarnedPremium)
names(df)
colnames(df)[5] = "LossRatio"
colnames(df)
@
\end{frame}

\begin{frame}[fragile]{Subsetting - The easy way}
<<>>=
dfTX = subset(df, State == "TX")
dfBigPolicies = subset(df, EarnedPremium >= 50000)
@
\end{frame}

\begin{frame}[fragile]{Subsetting - The hard(ish) way}
<<>>=
dfTX = df[df$State == "TX", ]
dfBigPolicies = df[df$EarnedPremium >= 50000, ]
@
\end{frame}

\begin{frame}[fragile]{Subsetting - Yet another way}
<<>>=
whichState = df$State == "TX"
dfTX = df[whichState, ]

whichEP = df$EarnedPremium >= 50000
dfBigPolicies = df[whichEP, ]
@
\end{frame}

\begin{frame}{Subsetting}
I use each of these three methods routinely. They're all good.
\end{frame}

\begin{frame}[fragile]{Summarizing}
<<size='tiny'>>=
sum(df$EarnedPremium)
sum(df$EarnedPremium[df$State == "TX"])

aggregate(df[,-1], list(df$State), sum)
@
\end{frame}

\begin{frame}[fragile]{Summarizing visually - 1}
<<size='tiny', fig.height=5>>=
dfByState = aggregate(df$EarnedPremium, list(df$State), sum)
colnames(dfByState) = c("State", "EarnedPremium")
barplot(dfByState$EarnedPremium, names.arg=dfByState$State, col="blue")
@
\end{frame}

\begin{frame}[fragile]{Summarizing visually - 2}
<<size='tiny', fig.height=5>>=
dotchart(dfByState$EarnedPremium, dfByState$State, pch=19)
@
\end{frame}

\begin{frame}[fragile]{Before I forget}
formatting tick marks
\end{frame}

\begin{frame}{Advanced data frame tools}
  \begin{itemize}
    \item plyr
    \item reshape2
    \item data.table
    \item doBy
  \end{itemize}
\end{frame}